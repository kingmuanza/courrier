package net.keama.workspace.entity;
// Generated Feb 4, 2017 1:33:29 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Reunion generated by hbm2java
 */
@Entity
@Table(name="reunion"
    ,catalog="workspace"
)
public class Reunion  implements java.io.Serializable {


     private Integer idreunion;
     private Employe employe;
     private SalleReunion salleReunion;
     private String ref;
     private Date dateDebut;
     private Date dateFin;
     private String titre;
     private String description;
     private String statut;
     private Date dateEnregistrement;
     private Set<ReunionEmploye> reunionEmployes = new HashSet<ReunionEmploye>(0);
     private Set<ReunionRapport> reunionRapports = new HashSet<ReunionRapport>(0);
     private Set<ReunionPoints> reunionPointses = new HashSet<ReunionPoints>(0);

    public Reunion() {
    }

    public Reunion(Employe employe, SalleReunion salleReunion, String ref, Date dateDebut, Date dateFin, String titre, String description, String statut, Date dateEnregistrement, Set<ReunionEmploye> reunionEmployes, Set<ReunionRapport> reunionRapports, Set<ReunionPoints> reunionPointses) {
       this.employe = employe;
       this.salleReunion = salleReunion;
       this.ref = ref;
       this.dateDebut = dateDebut;
       this.dateFin = dateFin;
       this.titre = titre;
       this.description = description;
       this.statut = statut;
       this.dateEnregistrement = dateEnregistrement;
       this.reunionEmployes = reunionEmployes;
       this.reunionRapports = reunionRapports;
       this.reunionPointses = reunionPointses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idreunion", unique=true, nullable=false)
    public Integer getIdreunion() {
        return this.idreunion;
    }
    
    public void setIdreunion(Integer idreunion) {
        this.idreunion = idreunion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idemploye")
    public Employe getEmploye() {
        return this.employe;
    }
    
    public void setEmploye(Employe employe) {
        this.employe = employe;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idsalle")
    public SalleReunion getSalleReunion() {
        return this.salleReunion;
    }
    
    public void setSalleReunion(SalleReunion salleReunion) {
        this.salleReunion = salleReunion;
    }

    
    @Column(name="ref", length=45)
    public String getRef() {
        return this.ref;
    }
    
    public void setRef(String ref) {
        this.ref = ref;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_debut", length=19)
    public Date getDateDebut() {
        return this.dateDebut;
    }
    
    public void setDateDebut(Date dateDebut) {
        this.dateDebut = dateDebut;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_fin", length=19)
    public Date getDateFin() {
        return this.dateFin;
    }
    
    public void setDateFin(Date dateFin) {
        this.dateFin = dateFin;
    }

    
    @Column(name="titre")
    public String getTitre() {
        return this.titre;
    }
    
    public void setTitre(String titre) {
        this.titre = titre;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="statut", length=45)
    public String getStatut() {
        return this.statut;
    }
    
    public void setStatut(String statut) {
        this.statut = statut;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_enregistrement", length=19)
    public Date getDateEnregistrement() {
        return this.dateEnregistrement;
    }
    
    public void setDateEnregistrement(Date dateEnregistrement) {
        this.dateEnregistrement = dateEnregistrement;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="reunion")
    public Set<ReunionEmploye> getReunionEmployes() {
        return this.reunionEmployes;
    }
    
    public void setReunionEmployes(Set<ReunionEmploye> reunionEmployes) {
        this.reunionEmployes = reunionEmployes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="reunion")
    public Set<ReunionRapport> getReunionRapports() {
        return this.reunionRapports;
    }
    
    public void setReunionRapports(Set<ReunionRapport> reunionRapports) {
        this.reunionRapports = reunionRapports;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="reunion")
    public Set<ReunionPoints> getReunionPointses() {
        return this.reunionPointses;
    }
    
    public void setReunionPointses(Set<ReunionPoints> reunionPointses) {
        this.reunionPointses = reunionPointses;
    }




}


