package net.keama.workspace.entity;
// Generated Feb 4, 2017 1:33:29 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Employe generated by hbm2java
 */
@Entity
@Table(name="employe"
    ,catalog="workspace"
    , uniqueConstraints = {@UniqueConstraint(columnNames="cni"), @UniqueConstraint(columnNames="matricule")} 
)
public class Employe  implements java.io.Serializable {


     private Integer idemploye;
     private ImageLogo imageLogo;
     private Poste poste;
     private String noms;
     private String prenoms;
     private Date datenaiss;
     private String lieunaiss;
     private String cni;
     private Date dateAccession;
     private String matricule;
     private Boolean sexe;
     private String tel1;
     private String tel2;
     private String email1;
     private String email2;
     private Set<Message> messagesForIdrecepteur = new HashSet<Message>(0);
     private Set<Message> messagesForIdemetteur = new HashSet<Message>(0);
     private Set<Tache> tachesForIdordonnateur = new HashSet<Tache>(0);
     private Set<ReunionEmploye> reunionEmployes = new HashSet<ReunionEmploye>(0);
     private Set<TacheProcedure> tacheProcedures = new HashSet<TacheProcedure>(0);
     private Set<Suggestion> suggestions = new HashSet<Suggestion>(0);
     private Set<InformationGeneraleEmploye> informationGeneraleEmployes = new HashSet<InformationGeneraleEmploye>(0);
     private Set<InformationGenerale> informationGenerales = new HashSet<InformationGenerale>(0);
     private Set<TacheCommentaire> tacheCommentaires = new HashSet<TacheCommentaire>(0);
     private Set<CourrierResponsable> courrierResponsables = new HashSet<CourrierResponsable>(0);
     private Set<TacheDocument> tacheDocuments = new HashSet<TacheDocument>(0);
     private Set<Tache> tachesForIdemploye = new HashSet<Tache>(0);
     private Set<Reunion> reunions = new HashSet<Reunion>(0);
     private Set<CourrierProcedureTache> courrierProcedureTaches = new HashSet<CourrierProcedureTache>(0);
     private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
     private Set<TacheEmploye> tacheEmployes = new HashSet<TacheEmploye>(0);

    public Employe() {
    }

    public Employe(ImageLogo imageLogo, Poste poste, String noms, String prenoms, Date datenaiss, String lieunaiss, String cni, Date dateAccession, String matricule, Boolean sexe, String tel1, String tel2, String email1, String email2, Set<Message> messagesForIdrecepteur, Set<Message> messagesForIdemetteur, Set<Tache> tachesForIdordonnateur, Set<ReunionEmploye> reunionEmployes, Set<TacheProcedure> tacheProcedures, Set<Suggestion> suggestions, Set<InformationGeneraleEmploye> informationGeneraleEmployes, Set<InformationGenerale> informationGenerales, Set<TacheCommentaire> tacheCommentaires, Set<CourrierResponsable> courrierResponsables, Set<TacheDocument> tacheDocuments, Set<Tache> tachesForIdemploye, Set<Reunion> reunions, Set<CourrierProcedureTache> courrierProcedureTaches, Set<Utilisateur> utilisateurs, Set<TacheEmploye> tacheEmployes) {
       this.imageLogo = imageLogo;
       this.poste = poste;
       this.noms = noms;
       this.prenoms = prenoms;
       this.datenaiss = datenaiss;
       this.lieunaiss = lieunaiss;
       this.cni = cni;
       this.dateAccession = dateAccession;
       this.matricule = matricule;
       this.sexe = sexe;
       this.tel1 = tel1;
       this.tel2 = tel2;
       this.email1 = email1;
       this.email2 = email2;
       this.messagesForIdrecepteur = messagesForIdrecepteur;
       this.messagesForIdemetteur = messagesForIdemetteur;
       this.tachesForIdordonnateur = tachesForIdordonnateur;
       this.reunionEmployes = reunionEmployes;
       this.tacheProcedures = tacheProcedures;
       this.suggestions = suggestions;
       this.informationGeneraleEmployes = informationGeneraleEmployes;
       this.informationGenerales = informationGenerales;
       this.tacheCommentaires = tacheCommentaires;
       this.courrierResponsables = courrierResponsables;
       this.tacheDocuments = tacheDocuments;
       this.tachesForIdemploye = tachesForIdemploye;
       this.reunions = reunions;
       this.courrierProcedureTaches = courrierProcedureTaches;
       this.utilisateurs = utilisateurs;
       this.tacheEmployes = tacheEmployes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idemploye", unique=true, nullable=false)
    public Integer getIdemploye() {
        return this.idemploye;
    }
    
    public void setIdemploye(Integer idemploye) {
        this.idemploye = idemploye;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idimage_logo")
    public ImageLogo getImageLogo() {
        return this.imageLogo;
    }
    
    public void setImageLogo(ImageLogo imageLogo) {
        this.imageLogo = imageLogo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idposte_actuel")
    public Poste getPoste() {
        return this.poste;
    }
    
    public void setPoste(Poste poste) {
        this.poste = poste;
    }

    
    @Column(name="noms", length=45)
    public String getNoms() {
        return this.noms;
    }
    
    public void setNoms(String noms) {
        this.noms = noms;
    }

    
    @Column(name="prenoms", length=45)
    public String getPrenoms() {
        return this.prenoms;
    }
    
    public void setPrenoms(String prenoms) {
        this.prenoms = prenoms;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="datenaiss", length=10)
    public Date getDatenaiss() {
        return this.datenaiss;
    }
    
    public void setDatenaiss(Date datenaiss) {
        this.datenaiss = datenaiss;
    }

    
    @Column(name="lieunaiss", length=45)
    public String getLieunaiss() {
        return this.lieunaiss;
    }
    
    public void setLieunaiss(String lieunaiss) {
        this.lieunaiss = lieunaiss;
    }

    
    @Column(name="cni", unique=true, length=45)
    public String getCni() {
        return this.cni;
    }
    
    public void setCni(String cni) {
        this.cni = cni;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_accession", length=10)
    public Date getDateAccession() {
        return this.dateAccession;
    }
    
    public void setDateAccession(Date dateAccession) {
        this.dateAccession = dateAccession;
    }

    
    @Column(name="matricule", unique=true, length=45)
    public String getMatricule() {
        return this.matricule;
    }
    
    public void setMatricule(String matricule) {
        this.matricule = matricule;
    }

    
    @Column(name="sexe")
    public Boolean getSexe() {
        return this.sexe;
    }
    
    public void setSexe(Boolean sexe) {
        this.sexe = sexe;
    }

    
    @Column(name="tel1", length=45)
    public String getTel1() {
        return this.tel1;
    }
    
    public void setTel1(String tel1) {
        this.tel1 = tel1;
    }

    
    @Column(name="tel2", length=45)
    public String getTel2() {
        return this.tel2;
    }
    
    public void setTel2(String tel2) {
        this.tel2 = tel2;
    }

    
    @Column(name="email1", length=45)
    public String getEmail1() {
        return this.email1;
    }
    
    public void setEmail1(String email1) {
        this.email1 = email1;
    }

    
    @Column(name="email2", length=45)
    public String getEmail2() {
        return this.email2;
    }
    
    public void setEmail2(String email2) {
        this.email2 = email2;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdrecepteur")
    public Set<Message> getMessagesForIdrecepteur() {
        return this.messagesForIdrecepteur;
    }
    
    public void setMessagesForIdrecepteur(Set<Message> messagesForIdrecepteur) {
        this.messagesForIdrecepteur = messagesForIdrecepteur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdemetteur")
    public Set<Message> getMessagesForIdemetteur() {
        return this.messagesForIdemetteur;
    }
    
    public void setMessagesForIdemetteur(Set<Message> messagesForIdemetteur) {
        this.messagesForIdemetteur = messagesForIdemetteur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdordonnateur")
    public Set<Tache> getTachesForIdordonnateur() {
        return this.tachesForIdordonnateur;
    }
    
    public void setTachesForIdordonnateur(Set<Tache> tachesForIdordonnateur) {
        this.tachesForIdordonnateur = tachesForIdordonnateur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<ReunionEmploye> getReunionEmployes() {
        return this.reunionEmployes;
    }
    
    public void setReunionEmployes(Set<ReunionEmploye> reunionEmployes) {
        this.reunionEmployes = reunionEmployes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<TacheProcedure> getTacheProcedures() {
        return this.tacheProcedures;
    }
    
    public void setTacheProcedures(Set<TacheProcedure> tacheProcedures) {
        this.tacheProcedures = tacheProcedures;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Suggestion> getSuggestions() {
        return this.suggestions;
    }
    
    public void setSuggestions(Set<Suggestion> suggestions) {
        this.suggestions = suggestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<InformationGeneraleEmploye> getInformationGeneraleEmployes() {
        return this.informationGeneraleEmployes;
    }
    
    public void setInformationGeneraleEmployes(Set<InformationGeneraleEmploye> informationGeneraleEmployes) {
        this.informationGeneraleEmployes = informationGeneraleEmployes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<InformationGenerale> getInformationGenerales() {
        return this.informationGenerales;
    }
    
    public void setInformationGenerales(Set<InformationGenerale> informationGenerales) {
        this.informationGenerales = informationGenerales;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<TacheCommentaire> getTacheCommentaires() {
        return this.tacheCommentaires;
    }
    
    public void setTacheCommentaires(Set<TacheCommentaire> tacheCommentaires) {
        this.tacheCommentaires = tacheCommentaires;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<CourrierResponsable> getCourrierResponsables() {
        return this.courrierResponsables;
    }
    
    public void setCourrierResponsables(Set<CourrierResponsable> courrierResponsables) {
        this.courrierResponsables = courrierResponsables;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<TacheDocument> getTacheDocuments() {
        return this.tacheDocuments;
    }
    
    public void setTacheDocuments(Set<TacheDocument> tacheDocuments) {
        this.tacheDocuments = tacheDocuments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdemploye")
    public Set<Tache> getTachesForIdemploye() {
        return this.tachesForIdemploye;
    }
    
    public void setTachesForIdemploye(Set<Tache> tachesForIdemploye) {
        this.tachesForIdemploye = tachesForIdemploye;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Reunion> getReunions() {
        return this.reunions;
    }
    
    public void setReunions(Set<Reunion> reunions) {
        this.reunions = reunions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<CourrierProcedureTache> getCourrierProcedureTaches() {
        return this.courrierProcedureTaches;
    }
    
    public void setCourrierProcedureTaches(Set<CourrierProcedureTache> courrierProcedureTaches) {
        this.courrierProcedureTaches = courrierProcedureTaches;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Utilisateur> getUtilisateurs() {
        return this.utilisateurs;
    }
    
    public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
        this.utilisateurs = utilisateurs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<TacheEmploye> getTacheEmployes() {
        return this.tacheEmployes;
    }
    
    public void setTacheEmployes(Set<TacheEmploye> tacheEmployes) {
        this.tacheEmployes = tacheEmployes;
    }




}


